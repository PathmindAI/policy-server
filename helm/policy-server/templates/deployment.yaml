apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "policy-server.fullname" . }}
  labels:
    {{- include "policy-server.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "policy-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        timestamp: "{{ date "20060102150405" .Release.Time }}"
      labels:
        {{- include "policy-server.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "policy-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: {{ .Values.image.command }}
          args:
{{- range .Values.image.args }}
            - "{{ . }}"
{{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port1 }}
              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          env:
            - name: TUPLE
              value: "{{ .Values.env.TUPLE }}"
            - name: USE_DOCKER
              value: "True"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
